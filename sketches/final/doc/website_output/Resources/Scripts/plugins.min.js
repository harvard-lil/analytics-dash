/* Array.indexOf polyfill 
*  https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf
*/
if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (e) { "use strict"; if (this == null) { throw new TypeError } var t = Object(this); var n = t.length >>> 0; if (n === 0) { return -1 } var r = 0; if (arguments.length > 1) { r = Number(arguments[1]); if (r != r) { r = 0 } else if (r != 0 && r != Infinity && r != -Infinity) { r = (r > 0 || -1) * Math.floor(Math.abs(r)) } } if (r >= n) { return -1 } var i = r >= 0 ? r : Math.max(n - Math.abs(r), 0); for (; i < n; i++) { if (i in t && t[i] === e) { return i } } return -1 } }

/*
* jQuery hashchange event - v1.3 - 7/21/2010
* http://benalman.com/projects/jquery-hashchange-plugin/
* 
* Copyright (c) 2010 "Cowboy" Ben Alman
* Dual licensed under the MIT and GPL licenses.
* http://benalman.com/about/license/
*/
(function ($, e, b) { var c = "hashchange", h = document, f, g = $.event.special, i = h.documentMode, d = "on" + c in e && (i === b || i > 7); function a(j) { j = j || location.href; return "#" + j.replace(/^[^#]*#?(.*)$/, "$1") } $.fn[c] = function (j) { return j ? this.bind(c, j) : this.trigger(c) }; $.fn[c].delay = 50; g[c] = $.extend(g[c], { setup: function () { if (d) { return false } $(f.start) }, teardown: function () { if (d) { return false } $(f.stop) } }); f = (function () { var j = {}, p, m = a(), k = function (q) { return q }, l = k, o = k; j.start = function () { p || n() }; j.stop = function () { p && clearTimeout(p); p = b }; function n() { var r = a(), q = o(m); if (r !== m) { l(m = r, q); $(e).trigger(c) } else { if (q !== m) { location.href = location.href.replace(/#.*/, "") + q } } p = setTimeout(n, $.fn[c].delay) } $.browser.msie && !d && (function () { var q, r; j.start = function () { if (!q) { r = $.fn[c].src; r = r && r + a(); q = $('<iframe tabindex="-1" title="empty"/>').hide().one("load", function () { r || l(a()); n() }).attr("src", r || "javascript:0").insertAfter("body")[0].contentWindow; h.onpropertychange = function () { try { if (event.propertyName === "title") { q.document.title = h.title } } catch (s) { } } } }; j.stop = k; o = function () { return a(q.location.href) }; l = function (v, s) { var u = q.document, t = $.fn[c].domain; if (v !== s) { u.title = h.title; u.open(); t && u.write('<script>document.domain="' + t + '"<\/script>'); u.close(); q.location.hash = v } } })(); return j })() })(jQuery, this);

/*! http://mths.be/placeholder v1.8.7 by @mathias */
(function (f, h, c) { var a = 'placeholder' in h.createElement('input'), d = 'placeholder' in h.createElement('textarea'), i = c.fn, j; if (a && d) { j = i.placeholder = function () { return this }; j.input = j.textarea = true } else { j = i.placeholder = function () { return this.filter((a ? 'textarea' : ':input') + '[placeholder]').not('.placeholder').bind('focus.placeholder', b).bind('blur.placeholder', e).trigger('blur.placeholder').end() }; j.input = a; j.textarea = d; c(function () { c(h).delegate('form', 'submit.placeholder', function () { var k = c('.placeholder', this).each(b); setTimeout(function () { k.each(e) }, 10) }) }); c(f).bind('unload.placeholder', function () { c('.placeholder').val('') }) } function g(l) { var k = {}, m = /^jQuery\d+$/; c.each(l.attributes, function (o, n) { if (n.specified && !m.test(n.name)) { k[n.name] = n.value } }); return k } function b() { var k = c(this); if (k.val() === k.attr('placeholder') && k.hasClass('placeholder')) { if (k.data('placeholder-password')) { k.hide().next().show().focus().attr('id', k.removeAttr('id').data('placeholder-id')) } else { k.val('').removeClass('placeholder') } } } function e() { var o, n = c(this), k = n, m = this.id; if (n.val() === '') { if (n.is(':password')) { if (!n.data('placeholder-textinput')) { try { o = n.clone().attr({ type: 'text' }) } catch (l) { o = c('<input>').attr(c.extend(g(this), { type: 'text' })) } o.removeAttr('name').data('placeholder-password', true).data('placeholder-id', m).bind('focus.placeholder', b); n.data('placeholder-textinput', o).data('placeholder-id', m).before(o) } n = n.removeAttr('id').hide().prev().attr('id', m).show() } n.addClass('placeholder').val(n.attr('placeholder')) } else { n.removeClass('placeholder') } } } (this, document, jQuery));

/*
* jQuery scrollintoview() plugin and :scrollable selector filter
*
* Version 1.8 (14 Jul 2011)
* Requires jQuery 1.4 or newer
*
* Copyright (c) 2011 Robert Koritnik
* Licensed under the terms of the MIT license
* http://www.opensource.org/licenses/mit-license.php
*/
(function (f) { var c = { vertical: { x: false, y: true }, horizontal: { x: true, y: false }, both: { x: true, y: true }, x: { x: true, y: false }, y: { x: false, y: true} }; var b = { duration: "fast", direction: "both" }; var e = /^(?:html)$/i; var g = function (k, j) { j = j || (document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(k, null) : k.currentStyle); var i = document.defaultView && document.defaultView.getComputedStyle ? true : false; var h = { top: (parseFloat(i ? j.borderTopWidth : f.css(k, "borderTopWidth")) || 0), left: (parseFloat(i ? j.borderLeftWidth : f.css(k, "borderLeftWidth")) || 0), bottom: (parseFloat(i ? j.borderBottomWidth : f.css(k, "borderBottomWidth")) || 0), right: (parseFloat(i ? j.borderRightWidth : f.css(k, "borderRightWidth")) || 0) }; return { top: h.top, left: h.left, bottom: h.bottom, right: h.right, vertical: h.top + h.bottom, horizontal: h.left + h.right} }; var d = function (h) { var j = f(window); var i = e.test(h[0].nodeName); return { border: i ? { top: 0, left: 0, bottom: 0, right: 0} : g(h[0]), scroll: { top: (i ? j : h).scrollTop(), left: (i ? j : h).scrollLeft() }, scrollbar: { right: i ? 0 : h.innerWidth() - h[0].clientWidth, bottom: i ? 0 : h.innerHeight() - h[0].clientHeight }, rect: (function () { var k = h[0].getBoundingClientRect(); return { top: i ? 0 : k.top, left: i ? 0 : k.left, bottom: i ? h[0].clientHeight : k.bottom, right: i ? h[0].clientWidth : k.right} })()} }; f.fn.extend({ scrollintoview: function (j) { j = f.extend({}, b, j); j.direction = c[typeof (j.direction) === "string" && j.direction.toLowerCase()] || c.both; var n = ""; if (j.direction.x === true) { n = "horizontal" } if (j.direction.y === true) { n = n ? "both" : "vertical" } var l = this.eq(0); var i = l.closest(":scrollable(" + n + ")"); if (i.length > 0) { i = i.eq(0); var m = { e: d(l), s: d(i) }; var h = { top: m.e.rect.top - (m.s.rect.top + m.s.border.top), bottom: m.s.rect.bottom - m.s.border.bottom - m.s.scrollbar.bottom - m.e.rect.bottom, left: m.e.rect.left - (m.s.rect.left + m.s.border.left), right: m.s.rect.right - m.s.border.right - m.s.scrollbar.right - m.e.rect.right }; var k = {}; if (j.direction.y === true) { if (h.top < 0) { k.scrollTop = m.s.scroll.top + h.top } else { if (h.top > 0 && h.bottom < 0) { k.scrollTop = m.s.scroll.top + Math.min(h.top, -h.bottom) } } } if (j.direction.x === true) { if (h.left < 0) { k.scrollLeft = m.s.scroll.left + h.left } else { if (h.left > 0 && h.right < 0) { k.scrollLeft = m.s.scroll.left + Math.min(h.left, -h.right) } } } if (!f.isEmptyObject(k)) { if (e.test(i[0].nodeName)) { i = f("html,body") } i.animate(k, j.duration).eq(0).queue(function (o) { f.isFunction(j.complete) && j.complete.call(i[0]); o() }) } else { f.isFunction(j.complete) && j.complete.call(i[0]) } } return this } }); var a = { auto: true, scroll: true, visible: false, hidden: false }; f.extend(f.expr[":"], { scrollable: function (k, i, n, h) { var m = c[typeof (n[3]) === "string" && n[3].toLowerCase()] || c.both; var l = (document.defaultView && document.defaultView.getComputedStyle ? document.defaultView.getComputedStyle(k, null) : k.currentStyle); var o = { x: a[l.overflowX.toLowerCase()] || false, y: a[l.overflowY.toLowerCase()] || false, isRoot: e.test(k.nodeName) }; if (!o.x && !o.y && !o.isRoot) { return false } var j = { height: { scroll: k.scrollHeight, client: k.clientHeight }, width: { scroll: k.scrollWidth, client: k.clientWidth }, scrollableX: function () { return (o.x || o.isRoot) && this.width.scroll > this.width.client }, scrollableY: function () { return (o.y || o.isRoot) && this.height.scroll > this.height.client } }; return m.y && j.scrollableY() || m.x && j.scrollableX() } }) })(jQuery);

/*
* jQuery Mobile Framework 1.1.0 db342b1f315c282692791aa870455901fdb46a55
* http://jquerymobile.com
*
* Copyright 2011 (c) jQuery Project
* Dual licensed under the MIT or GPL Version 2 licenses.
* http://jquery.org/license
*
*/

/*
* Stripped the touch swipe logic from jQuery Mobile and turned it into this plugin
* Copyright 2012 (c) CodingJack - http://codecanyon.net/user/CodingJack
* Dual licensed under the MIT or GPL Version 2 licenses.
*/
(function (d) { var f, c, k, g = 100, j = 75, i = 10, l = 1000; if ("ontouchend" in document) { f = "touchend.cj_swp"; c = "touchmove.cj_swp"; k = "touchstart.cj_swp" } else { f = "mouseup.cj_swp"; c = "mousemove.cj_swp"; k = "mousedown.cj_swp" } d.fn.touchSwipe = function (n, o) { if (o) { this.data("stopPropagation", true) } if (n) { return this.each(m, [n]) } }; d.fn.touchSwipeLeft = function (n, o) { if (o) { this.data("stopPropagation", true) } if (n) { return this.each(e, [n]) } }; d.fn.touchSwipeRight = function (n, o) { if (o) { this.data("stopPropagation", true) } if (n) { return this.each(b, [n]) } }; function m(n) { d(this).touchSwipeLeft(n).touchSwipeRight(n) } function e(n) { var o = d(this); if (!o.data("swipeLeft")) { o.data("swipeLeft", n) } if (!o.data("swipeRight")) { h(o) } } function b(n) { var o = d(this); if (!o.data("swipeRight")) { o.data("swipeRight", n) } if (!o.data("swipeLeft")) { h(o) } } d.fn.unbindSwipeLeft = function () { this.removeData("swipeLeft"); if (!this.data("swipeRight")) { this.unbindSwipe(true) } }; d.fn.unbindSwipeRight = function () { this.removeData("swipeRight"); if (!this.data("swipeLeft")) { this.unbindSwipe(true) } }; d.fn.unbindSwipe = function (n) { if (!n) { this.removeData("swipeLeft swipeRight stopPropagation") } return this.unbind(k + " " + c + " " + f) }; function h(n) { n.unbindSwipe(true).bind(k, a) } function a(n) { var o = new Date().getTime(), r = n.originalEvent.touches ? n.originalEvent.touches[0] : n, u = d(this).bind(c, s).one(f, x), q = r.pageX, p = r.pageY, v, t, w; if (u.data("stopPropagation")) { n.stopImmediatePropagation() } function x(y) { u.unbind(c); if (o && w) { if (w - o < l && Math.abs(q - v) > g && Math.abs(p - t) < j) { if (q > v) { if (u.data("swipeLeft")) { u.data("swipeLeft")("left") } } else { if (u.data("swipeRight")) { u.data("swipeRight")("right") } } } } o = w = null } function s(y) { if (o) { r = y.originalEvent.touches ? y.originalEvent.touches[0] : y; w = new Date().getTime(); v = r.pageX; t = r.pageY; if (Math.abs(q - v) > i) { y.preventDefault() } } } } })(jQuery);

/*
* Foundation Zurb - Off Canvas layout jQuery
*/
!function (o) { var e = !1, a = !1, r = { isUrl: function (o) { var e = new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$", "i"); return e.test(o) ? !0 : !1 }, loadContent: function (o, e) { o.html(e) }, addPrefix: function (o) { var e = o.attr("id"), a = o.attr("class"); "string" == typeof e && "" !== e && o.attr("id", e.replace(/([A-Za-z0-9_.\-]+)/g, "sidr-id-$1")), "string" == typeof a && "" !== a && "sidr-inner" !== a && o.attr("class", a.replace(/([A-Za-z0-9_.\-]+)/g, "sidr-class-$1")), o.removeAttr("style") }, execute: function (r, t, i) { "function" == typeof t ? (i = t, t = "sidr") : t || (t = "sidr"); var s, c, d, u = o("#" + t), l = o(u.data("body")), f = o("html"), p = u.outerWidth(!0), m = u.data("speed"), g = u.data("side"), h = u.data("displace"), v = u.data("onOpen"), C = u.data("onClose"), b = "sidr" === t ? "sidr-open" : "sidr-open " + t + "-open"; if ("open" === r || "toggle" === r && !u.is(":visible")) { if (u.is(":visible") || e) return; if (a !== !1) return n.close(a, function () { n.open(t) }), void 0; e = !0, "left" === g ? (s = { left: p + "px" }, c = { left: "0px" }) : (s = { right: p + "px" }, c = { right: "0px" }), l.is("body") && (d = f.scrollTop(), f.css("overflow-x", "hidden").scrollTop(d)), h ? l.addClass("sidr-animating").css({ width: l.width(), position: "absolute" }).animate(s, m, function () { o(this).addClass(b) }) : setTimeout(function () { o(this).addClass(b) }, m), u.css("display", "block").animate(c, m, function () { e = !1, a = t, "function" == typeof i && i(t), l.removeClass("sidr-animating") }), v() } else { if (!u.is(":visible") || e) return; e = !0, "left" === g ? (s = { left: 0 }, c = { left: "-" + p + "px" }) : (s = { right: 0 }, c = { right: "-" + p + "px" }), l.is("body") && (d = f.scrollTop(), f.removeAttr("style").scrollTop(d)), l.addClass("sidr-animating").animate(s, m).removeClass(b), u.animate(c, m, function () { u.removeAttr("style").hide(), l.removeAttr("style"), o("html").removeAttr("style"), e = !1, a = !1, "function" == typeof i && i(t), l.removeClass("sidr-animating") }), C() } } }, n = { open: function (o, e) { r.execute("open", o, e) }, close: function (o, e) { r.execute("close", o, e) }, toggle: function (o, e) { r.execute("toggle", o, e) }, toogle: function (o, e) { r.execute("toggle", o, e) } }; o.sidr = function (e) { return n[e] ? n[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "function" != typeof e && "string" != typeof e && e ? (o.error("Method " + e + " does not exist on jQuery.sidr"), void 0) : n.toggle.apply(this, arguments) }, o.fn.sidr = function (e) { var a = o.extend({ name: "sidr", speed: 200, side: "left", source: null, renaming: !0, body: "body", displace: !0, onOpen: function () { }, onClose: function () { } }, e), t = a.name, i = o("#" + t); if (0 === i.length && (i = o("<div />").attr("id", t).appendTo(o("body"))), i.addClass("sidr").addClass(a.side).data({ speed: a.speed, side: a.side, body: a.body, displace: a.displace, onOpen: a.onOpen, onClose: a.onClose }), "function" == typeof a.source) { var s = a.source(t); r.loadContent(i, s) } else if ("string" == typeof a.source && r.isUrl(a.source)) o.get(a.source, function (o) { r.loadContent(i, o) }); else if ("string" == typeof a.source) { var c = "", d = a.source.split(","); if (o.each(d, function (e, a) { c += '<div class="sidr-inner">' + o(a).html() + "</div>" }), a.renaming) { var u = o("<div />").html(c); u.find("*").each(function (e, a) { var n = o(a); r.addPrefix(n) }), c = u.html() } r.loadContent(i, c) } else null !== a.source && o.error("Invalid Sidr Source"); return this.each(function () { var e = o(this), a = e.data("sidr"); a || (e.data("sidr", t), "ontouchstart" in document.documentElement ? (e.bind("touchstart", function (o) { o.originalEvent.touches[0], this.touched = o.timeStamp }), e.bind("touchend", function (o) { var e = Math.abs(o.timeStamp - this.touched); 200 > e && (o.preventDefault(), n.toggle(t)) })) : e.click(function (o) { o.preventDefault(), n.toggle(t) })) }) } }(jQuery);


/*
 * jQuery throttle / debounce - v1.1 - 3/7/2010
 * http://benalman.com/projects/jquery-throttle-debounce-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function (b, c) { var $ = b.jQuery || b.Cowboy || (b.Cowboy = {}), a; $.throttle = a = function (j, i) { var h, d = 0; if (typeof f !== "boolean") { i = j; j = f; f = c } function g() { var o = this, m = +new Date() - d, n = arguments; function l() { d = +new Date(); j.apply(o, n) } function k() { h = c } if (i && !h) { l() } h && clearTimeout(h); if (i === c && m > e) { l() } else { if (f !== true) { h = setTimeout(i ? k : l, i === c ? e - m : e) } } } if ($.guid) { g.guid = j.guid = j.guid || $.guid++ } return g }; $.debounce = function (d, e, f) { return f === c ? a(d, e, false) : a(d, f, e !== false) } })(this);


/*! Sidr - v1.2.1 - 2013-11-06
 * https://github.com/artberri/sidr
 * Copyright (c) 2013 Alberto Varela; Licensed MIT */
(function (e, t, n) { var r = n("#topMenu"), i = "click.fndtn"; if (r.length > 0) r.css("margin-top", r.height() * -1); var s = n("#sidebarButton"); if (s.length > 0) { n("#sidebarButton").on(i, function (e) { e.preventDefault(); n("body").toggleClass("active") }) } var o = n("#menuButton"); if (o.length > 0) { n("#menuButton").on(i, function (e) { e.preventDefault(); n("body").toggleClass("active-menu") }) } var u = n("#switchPanels"); if (u.length > 0) { n("#switchPanels dd").on(i, function (e) { e.preventDefault(); var t = n(this).children("a").attr("href"), r = n(t).index(); n(this).toggleClass("active").siblings().removeClass("active"); n(t).parent().css("left", r * -100 + "%") }) } n("#nav li a").on(i, function (e) { e.preventDefault(); var t = n(this).attr("href"), r = n(t); n("html, body").animate({ scrollTop: r.offset().top }, 300) }) })(this, document, jQuery)

/*!
 * v0.2.1
 * Copyright (c) 2013 Jarid Margolin
 * bouncefix.js is open sourced under the MIT license.
 */
//(function (e, t, n) { if (typeof module !== "undefined" && module.exports) { module.exports = n() } else if (typeof define === "function" && define.amd) { define(n) } else { t[e] = n() } })("bouncefix", this, function () { function t(e) { if (!e) { return false } this.className = e; this.startListener = (new r(document, { evt: "touchstart", handler: this.touchStart, context: this })).add(); this.endListener = (new r(document, { evt: "touchend", handler: this.touchEnd, context: this })).add() } function r(e, t) { this.evt = t.evt; this.el = e; this.handler = t.handler; if (t.context) { this.handler = function (e) { t.handler.call(t.context, e) } } } var e = { Fix: t, cache: {} }; e.add = function (e) { if (!this.cache[e]) { this.cache[e] = new this.Fix(e) } }; e.remove = function (e) { if (this.cache[e]) { this.cache[e].remove(); delete this.cache[e] } }; t.prototype.touchStart = function (e) { this.target = n.getTargetedEl(e.target, this.className); if (this.target) { if (n.isScrollable(this.target)) { return n.scrollToEnd(this.target) } if (!this.moveListener) { this.moveListener = (new r(this.target, { evt: "touchmove", handler: this.touchMove, context: this })).add() } } }; t.prototype.touchMove = function (e) { e.preventDefault() }; t.prototype.touchEnd = function (e) { if (this.moveListener) { this.moveListener.remove(); this.moveListener = null } }; t.prototype.remove = function () { this.startListener.remove(); this.endListener.remove() }; var n = {}; n.getTargetedEl = function (e, t) { while (true) { if (e.classList.contains(t)) { break } if (e = e.parentElement) { continue } break } return e }; n.isScrollable = function (e) { return e.scrollHeight > e.offsetHeight }; n.scrollToEnd = function (e) { var t = e.scrollTop, n = e.offsetHeight, r = e.scrollHeight; if (t <= 0) { e.scrollTop = 1 } if (t + n >= r) { e.scrollTop = r - n - 1 } }; r.prototype.add = function () { if (!this.el.addEventListener) { this.el.attachEvent(this.evt, this.handler) } else { this.el.addEventListener(this.evt, this.handler, false) } return this }; r.prototype.remove = function () { this.el.removeEventListener(this.evt, this.handler); return this }; return e })

/*
highlight v4

Highlights arbitrary terms.

<http://johannburkard.de/blog/programming/javascript/highlight-javascript-text-higlighting-jquery-plugin.html>

MIT license.

Johann Burkard
<http://johannburkard.de>
<mailto:jb@eaio.com>
jQuery.fn.highlight = function (e, t) { function n(e, r) { var i = 0; if (e.nodeType == 3) { var s = e.data.toUpperCase().indexOf(r); if (s >= 0) { var o = document.createElement("span"); o.className = t || "highlight"; var u = e.splitText(s); var a = u.splitText(r.length); var f = u.cloneNode(true); o.appendChild(f); u.parentNode.replaceChild(o, u); i = 1 } } else if (e.nodeType == 1 && e.childNodes && !/(script|style)/i.test(e.tagName)) { for (var l = 0; l < e.childNodes.length; ++l) { l += n(e.childNodes[l], r) } } return i } return this.length && e && e.length ? this.each(function () { n(this, e.toUpperCase()) }) : this }; jQuery.fn.removeHighlight = function (className) { return this.find("span." + className || "highlight").each(function () { this.parentNode.firstChild.nodeName; with (this.parentNode) { replaceChild(this.firstChild, this); normalize() } }).end() }
*/

jQuery.fn.highlight = function (pat, className) { var upper = function (astr) { return astr.toUpperCase(); }; var lower = function (astr) { return astr.toLowerCase(); }; var noop = function (astr) { return astr; }; function innerHighlight(node, pat, strop) { this.skip = 0; if (node.nodeType == 3) { if (node.data.length != strop(node.data).length || pat.length != strop(pat).length) { return false; } var opPat = strop(pat), opData = strop(node.data); if (!/MCHelpControl/.test(node.parentNode.className) && (/\s/.test(pat) || (new RegExp("\\s*" + opPat + "\\s*")).test(opData))) { var pos = strop(node.data).indexOf(strop(pat)); if (pos >= 0) { var spannode = document.createElement('span'); spannode.className = className || 'highlight'; var middlebit = node.splitText(pos); var endbit = middlebit.splitText(strop(pat).length); var middleclone = middlebit.cloneNode(true); spannode.appendChild(middleclone); middlebit.parentNode.replaceChild(spannode, middlebit); this.skip = 1; } else { this.skip = 0; } } } else if (node.nodeType == 1 && node.childNodes && !/(script|style)/i.test(node.tagName)) { for (var i = 0; i < node.childNodes.length; ++i) { if (!innerHighlight(node.childNodes[i], pat, upper)) { if (!innerHighlight(node.childNodes[i], pat, lower)) { i += this.skip; } else { i += this.skip; } } else { i += this.skip; } } } return true; } return this.length && pat && pat.length ? this.each(function () { if (this.childNodes.length == 1 && typeof this.recoveryData == 'undefined') { this.recoveryData = this.firstChild.data; } if (!innerHighlight(this, pat, upper)) { if (!innerHighlight(this, pat, lower)) { innerHighlight(this, pat, noop); } } }) : this; }; jQuery.fn.removeHighlight = function (className) { function innerNormalize(node) { for (var nodeIdx = 0; nodeIdx < node.childNodes.length; nodeIdx++) { if (node.childNodes[nodeIdx].nodeType == Node.TEXT_NODE) { var toRemove = new Array(); var nextNode = node.childNodes[nodeIdx].nextSibling; var skip = 0; while (nextNode != null && nextNode.nodeType == Node.TEXT_NODE) { node.childNodes[nodeIdx].data += nextNode.data; toRemove.push(nextNode); nextNode = nextNode.nextSibling; } toRemove.forEach(function (el, idx, arr) { node.removeChild(el); }); } } } function testDoUseInnerNormalize() { var p = document.createElement('p'); p.appendChild(document.createTextNode('')); p.appendChild(document.createTextNode('this-')); p.appendChild(document.createTextNode('??????a')); p.appendChild(document.createTextNode('?uü')); p.appendChild(document.createTextNode('is-a')); p.appendChild(document.createTextNode('nother-test?')); p.appendChild(document.createTextNode('¤xyz')); p.appendChild(document.createTextNode('xyz¤Ø')); document.getElementsByTagName('head')[0].appendChild(p); p.normalize(); var checkPass = (p.childNodes.length != 1) || p.childNodes[0].length != 'this-??????a?uüis-another-test?¤xyzxyz¤Ø'.length; document.getElementsByTagName('head')[0].removeChild(p); return checkPass; } function isOnlyFragmentedText(aParentNode) { var fragmented = aParentNode.childNodes.length > 1; for (var elIdx = 0; elIdx < aParentNode.childNodes.length; elIdx++) { if (aParentNode.childNodes[elIdx].nodeType == Node.ELEMENT_NODE) { fragmented = false; } } return fragmented; } return this.find("span." + className || "highlight").each(function () { var spanNode = this; var parNode = spanNode.parentNode; if (parNode != null && parNode.firstChild != null) { var textNode = spanNode.firstChild.cloneNode(); parNode.replaceChild(textNode, spanNode); if (testDoUseInnerNormalize()) { innerNormalize(parNode); } else { var wholeTextData = parNode.firstChild.wholeText; parNode.normalize(); if (typeof parNode.recoveryData != 'undefined') { if (parNode.childNodes.length == 1 && parNode.childNodes[0].wholeText != parNode.recoveryData) { parNode.innerText = parNode.recoveryData; } else if (isOnlyFragmentedText(parNode)) { parNode.innerText = parNode.recoveryData; } } else if (parNode.childNodes[0].data && wholeTextData != undefined && wholeTextData.length > parNode.childNodes[0].data.length) { parNode.innerText = wholeTextData; } } } }).end(); }